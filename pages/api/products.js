import clientPromise from "@/lib/mongodb";import { ObjectId } from "mongodb";export default async function handler(req,res){const client=await clientPromise;const db=client.db("gameworlds");const isAdmin=req.headers["x-admin-email"]===process.env.NEXT_PUBLIC_ADMIN_EMAIL;if(req.method==="GET"){if(req.query.id){const p=await db.collection("products").findOne({_id:new ObjectId(req.query.id)});return res.json(p||{});}const list=await db.collection("products").find({}).sort({_id:-1}).toArray();return res.json(list);}if(req.method==="POST"){if(!isAdmin) return res.status(401).json({message:"Not admin"});const {title,category,price,image}=req.body;if(!title||!category||price==null) return res.status(400).json({message:"Missing"});const r=await db.collection("products").insertOne({title,category,price,image,createdAt:new Date()});return res.json({_id:r.insertedId});}if(req.method==="DELETE"){if(!isAdmin) return res.status(401).json({message:"Not admin"});const {id}=req.query;await db.collection("products").deleteOne({_id:new ObjectId(id)});return res.json({ok:true});}if(req.method==="PUT"){if(!isAdmin) return res.status(401).json({message:"Not admin"});const {id}=req.query;const body=req.body||{};await db.collection("products").updateOne({_id:new ObjectId(id)},{ $set: body});return res.json({ok:true});}return res.status(405).end();}
