import Header from "@/components/Header";import { useEffect,useState } from "react";import { useSession } from "next-auth/react";function AdminOnly({children}){const {data:session,status}=useSession();if(status!=="authenticated") return <div className="max-w-5xl mx-auto p-4">Please login</div>;if(session.user.email!==process.env.NEXT_PUBLIC_ADMIN_EMAIL) return <div className="max-w-5xl mx-auto p-4">Not authorized</div>;return children;}export default function Admin({t}){const [settings,setSettings]=useState({online:true,notice:"",offlineUntil:""});const [products,setProducts]=useState([]);const [orders,setOrders]=useState([]);const [form,setForm]=useState({title:"",category:"",price:0,image:""});async function loadAll(){const s=await (await fetch("/api/settings")).json();setSettings(s);const p=await (await fetch("/api/products")).json();setProducts(p);const o=await (await fetch("/api/orders")).json();setOrders(o);}useEffect(()=>{loadAll();},[]);async function saveSettings(){await fetch("/api/settings",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(settings)});alert("Saved");}async function addProduct(e){e.preventDefault();await fetch("/api/products",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(form)});setForm({title:"",category:"",price:0,image:""});loadAll();}async function delProduct(id){await fetch("/api/products?id="+id,{method:"DELETE"});loadAll();}async function updateOrder(id,status){await fetch("/api/orders?id="+id,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({status})});loadAll();}return(<div><Header t={t}/><AdminOnly><div className="max-w-6xl mx-auto p-4 space-y-8"><h2 className="text-2xl font-bold">{t("settings")}</h2><div className="card"><label className="flex items-center gap-2"><input type="checkbox" checked={settings.online} onChange={e=>setSettings(s=>({...s,online:e.target.checked}))}/><span>{t("site_switch")}</span></label><div className="mt-3"><div className="text-sm">{t("notice")}</div><input className="input w-full" value={settings.notice} onChange={e=>setSettings(s=>({...s,notice:e.target.value}))}/></div><div className="mt-3"><div className="text-sm">{t("offline_until")}</div><input className="input w-full" placeholder="2025-12-01T12:00:00Z" value={settings.offlineUntil||""} onChange={e=>setSettings(s=>({...s,offlineUntil:e.target.value}))}/></div><button onClick={saveSettings} className="btn mt-3">{t("save")}</button></div><h2 className="text-2xl font-bold">{t("products_mgmt")}</h2><form onSubmit={addProduct} className="card grid grid-cols-1 md:grid-cols-4 gap-3"><input required className="input" placeholder="Title (e.g., Free Fire Diamonds)" value={form.title} onChange={e=>setForm({...form,title:e.target.value})}/><input required className="input" placeholder="Category (FF/PUBG/COD/Netflix/YouTube)" value={form.category} onChange={e=>setForm({...form,category:e.target.value})}/><input required type="number" className="input" placeholder="Price" value={form.price} onChange={e=>setForm({...form,price:Number(e.target.value)})}/><input className="input" placeholder="Image URL (optional)" value={form.image} onChange={e=>setForm({...form,image:e.target.value})}/><button className="btn md:col-span-4">{t("add")}</button></form><div className="grid3">{products.map(p=>(<div className="card" key={p._id}><div className="font-semibold">{p.title}</div><div className="text-sm text-gray-300">{p.category}</div><div className="text-sm mt-1">{p.price} à§³</div><button onClick={()=>delProduct(p._id)} className="btn bg-red-600 hover:bg-red-500 mt-3">{t("delete")}</button></div>))}</div><h2 className="text-2xl font-bold">{t("orders_mgmt")}</h2><div className="space-y-3">{orders.map(o=>(<div key={o._id} className="card"><div className="font-semibold">{o.productTitle}</div><div className="text-sm">User: {o.userEmail}</div><div className="text-sm">Method: {o.paymentMethod}, Account: {o.accountId}</div><div className="text-sm">Status: {o.status}</div><div className="flex gap-2 mt-2">{["pending","paid","completed","cancelled"].map(s=>(<button key={s} onClick={()=>updateOrder(o._id,s)} className="btn">{s}</button>))}</div></div>))}</div></div></AdminOnly></div>)}
